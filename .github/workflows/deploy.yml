name: 'Azure Serverless ETL CI/CD Pipeline'

on:
  push:
    branches:
      - main  
  workflow_dispatch: 

env:
  AZURE_FUNCTIONAPP_NAME: azetlfunctionapp
  RESOURCE_GROUP: azure-etl-pipeline
  TF_WORKING_DIR: './infra'
  PYTHON_VERSION: '3.9'

jobs:
  # Infrastructure with Terraform
  terraform:
    name: 'Terraform Infrastructure'
    runs-on: ubuntu-latest  

    # permissions for OIDC authentication
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.2.2'

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="storage_account_name=azetlfuncstr" -backend-config="container_name=tfstr" -backend-config="key=terraform.tfstate" -backend-config="access_key=${{ secrets.ARM_ACCESS_KEY }}"
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -var="az_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var="resource_group_name=${{ env.RESOURCE_GROUP }}"
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false -var="az_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var="resource_group_name=${{ env.RESOURCE_GROUP }}"
        working-directory: ${{ env.TF_WORKING_DIR }}

  # Deploy Function App Code
  deploy-function:
    name: 'Deploy Function App'
    runs-on: ubuntu-latest
    needs: terraform 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './function-app'
          remote-build: true
          